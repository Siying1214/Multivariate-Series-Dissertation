# ---- Packages & setup ----
library(tidyverse)
library(tsibble)
library(lubridate)
library(forecast)
library(ggplot2)
library(rugarch)
library(FinTS)

Sys.setlocale("LC_TIME", "C")      
setwd("C:/Users/杨思颖/Desktop/")

# ---- Data ----
gbp.ex <- read_csv("GBP_vs_USD_Exchange_Rates_New.csv", na = c("", "NA")) %>%
  rename(Date = 1, GBP = 2) %>%
  mutate(Date = dmy(Date)) %>%
  as_tsibble(index = Date) %>%
  fill_gaps() %>%
  fill(GBP, .direction = "downup")

train_data <- gbp.ex %>% filter(Date >= ymd("2023-10-01") & Date <= ymd("2025-03-16"))
test_data  <- gbp.ex %>% filter(Date >= ymd("2025-03-17") & Date <= ymd("2025-04-30"))

# ---- ARIMA(0,1,0) on FULL data (for residual diagnostics over whole span) ----
arima_full <- arima(x = as.numeric(gbp.ex$GBP), order = c(0,1,0), include.mean = FALSE)
res_full   <- residuals(arima_full)

# ACF/PACF of squared residuals (remove NAs)
res_full2 <- as.numeric(res_full^2)
res_full2 <- res_full2[!is.na(res_full2)]
acf(res_full2, lag.max = 30,
    main = "ACF of Squared Residuals: ARIMA(0,1,0) (Full, no mean)")
pacf(res_full2, lag.max = 30,
     main = "PACF of Squared Residuals: ARIMA(0,1,0) (Full, no mean)")

# Engle's ARCH LM test & Ljung-Box on squared residuals
arch_test <- ArchTest(res_full, lags = 12, demean = TRUE)
cat("\nARCH LM test (Engle):\n"); print(arch_test)

lbq_test <- Box.test(res_full2, lag = 12, type = "Ljung-Box")
cat("\nLjung-Box test on squared residuals:\n"); print(lbq_test)

# Residual-squared time plot (drop NA, align with Date)
res_df <- tibble(Date = gbp.ex$Date, Residual_Squared = as.numeric(res_full^2)) %>% drop_na()
ggplot(res_df, aes(Date, Residual_Squared)) +
  geom_line(color = "red") +
  labs(title = "Residual Squared Series", x = "Date", y = expression(epsilon^2)) +
  theme_minimal() + theme(plot.title = element_text(hjust = 0.5))

# ---- GARCH on differenced TRAIN series (as per your current spec) ----
diff_train <- diff(train_data$GBP, differences = 1)

spec_arima_garch <- ugarchspec(
  variance.model = list(model = "sGARCH", garchOrder = c(1, 1)),
  mean.model     = list(armaOrder = c(0, 1), include.mean = TRUE), # 你当前选择：在差分上加 MA(1)
  distribution.model = "std"
)

garch_fit <- ugarchfit(spec = spec_arima_garch, data = diff_train)
print(garch_fit)

# 标准化残差诊断
std_resid <- as.numeric(residuals(garch_fit))
acf(std_resid,   lag.max = 25, main = "ACF of Standardized Residuals (GARCH)")
acf(std_resid^2, lag.max = 30, main = "ACF of Squared Standardized Residuals (GARCH)")

# ---- Forecast on test horizon (difference -> level) ----
h <- nrow(test_data)
garch_fc <- ugarchforecast(garch_fit, n.ahead = h)
mu_hat   <- as.numeric(fitted(garch_fc))   # forecast mean of the differenced series
sigmahat <- as.numeric(sigma(garch_fc))

last_train_value <- as.numeric(tail(train_data$GBP, 1))
fc_df <- tibble(
  Date          = test_data$Date,
  Mean_Diff     = mu_hat,
  Sigma_Diff    = sigmahat
) %>%
  mutate(
    Forecast_Level = cumsum(Mean_Diff) + last_train_value,
    Lower_95       = Forecast_Level - 1.96 * Sigma_Diff,
    Upper_95       = Forecast_Level + 1.96 * Sigma_Diff
  )

print(fc_df)

ggplot(fc_df, aes(Date)) +
  geom_ribbon(aes(ymin = Lower_95, ymax = Upper_95), fill = "#cceeff", alpha = 0.3) +
  geom_line(aes(y = Forecast_Level), color = "blue") +
  labs(title = "Forecast of GBP/USD Exchange Rate (ARIMA(0,1,0)+GARCH(1,1))",
       x = "Date", y = "Predicted Exchange Rate") +
  scale_x_date(date_labels = "%Y-%m-%d") +
  theme_minimal()
